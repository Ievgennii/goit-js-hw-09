{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAiCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAQC,SAASjB,EAAKkB,SAASb,MAAMc,OACrCC,EAAOH,SAASjB,EAAKkB,SAASE,KAAKD,OACnCE,EAASJ,SAASjB,EAAKkB,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IACzCnB,EAAcmB,EAAUN,EAAQM,EAAWF,GACxCG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IACN,uBAAqBrB,QAAiBC,EAAOD,EAAWgB,OAE1DM,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBxB,QAAiBC,EAAOD,EAAWgB,MAAU,IAGrES,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IACN,sBAAoBrB,QAAiBC,EAAOD,EAAWgB,OAEzDM,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB1B,QAAeC,EAAOD,EAAWgB,MAAU,IAIvEpB,EAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay + position * step)\n      .then(({ position, delay }) => {\n        console.log(\n          `✅ Fulfilled promise ${position} in ${delay + position * step}ms`\n        );\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay + position * step}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(\n          `❌ Rejected promise ${position} in ${delay + position * step}ms`\n        );\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay + position * step}ms`\n        );\n      });\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","parseInt","elements","value","step","amount","position1","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f76b33ad.js.map"}